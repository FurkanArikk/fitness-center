services:
  payment-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ${PAYMENT_SERVICE_NAME:-fitness-payment-service}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432  # Explicitly set the port to 5432 inside Docker
      PAYMENT_SERVICE_DB_PORT: 5432  # Also set this explicitly
      DB_USER: ${DB_USER:-fitness_user}
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      PAYMENT_SERVICE_DB_NAME: ${PAYMENT_SERVICE_DB_NAME:-fitness_payment_db}
      PAYMENT_SERVICE_PORT: ${PAYMENT_SERVICE_PORT:-8003}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
    ports:
      - "${PAYMENT_SERVICE_PORT:-8003}:8003"
    networks:
      - ${DOCKER_NETWORK_NAME:-fitness-network}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8003/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:14
    container_name: ${PAYMENT_SERVICE_DB_NAME:-fitness-payment-db}
    environment:
      POSTGRES_USER: ${DB_USER:-fitness_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
      POSTGRES_DB: ${PAYMENT_SERVICE_DB_NAME:-fitness_payment_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${PAYMENT_SERVICE_DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Comment out this line to avoid the mount issues in WSL
      # - ./migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - ${DOCKER_NETWORK_NAME:-fitness-network}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fitness_user} -d ${PAYMENT_SERVICE_DB_NAME:-fitness_payment_db}"]
      interval: 180s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

networks:
  fitness-network:
    external: true
    name: ${DOCKER_NETWORK_NAME:-fitness-network}

volumes:
  postgres_data:
    driver: local
