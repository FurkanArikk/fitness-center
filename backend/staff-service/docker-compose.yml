services:
  postgres:
    image: postgres:14
    container_name: ${STAFF_SERVICE_CONTAINER_NAME:-fitness-staff-db}
    environment:
      POSTGRES_USER: ${DB_USER:-fitness_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
      POSTGRES_DB: ${STAFF_SERVICE_DB_NAME:-fitness_staff_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${STAFF_SERVICE_DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - ${DOCKER_NETWORK_NAME:-fitness-network}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fitness_user} -d ${STAFF_SERVICE_DB_NAME:-fitness_staff_db}"]
      interval: 180s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  staff-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fitness-staff-service
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      STAFF_SERVICE_DB_PORT: 5432
      DB_USER: ${DB_USER:-fitness_user}
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      STAFF_SERVICE_DB_NAME: ${STAFF_SERVICE_DB_NAME:-fitness_staff_db}
      STAFF_SERVICE_PORT: ${STAFF_SERVICE_PORT:-8002}
      STAFF_SERVICE_HOST: ${STAFF_SERVICE_HOST:-0.0.0.0}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - "${STAFF_SERVICE_PORT:-8002}:8002"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.staff-service.rule=PathPrefix(`/api/v1/staff`) || PathPrefix(`/api/v1/trainers`) || PathPrefix(`/api/v1/qualifications`) || PathPrefix(`/api/v1/training-sessions`)"
      - "traefik.http.routers.staff-service.entrypoints=web"
      - "traefik.http.services.staff-service.loadbalancer.server.port=8002"
      - "traefik.docker.network=${DOCKER_NETWORK_NAME:-fitness-network}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ${DOCKER_NETWORK_NAME:-fitness-network}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8002/health"]
      interval: 180s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  fitness-network:
    external: true
    name: ${DOCKER_NETWORK_NAME:-fitness-network}

volumes:
  postgres_data:
    driver: local
