# STAFF SERVICE API ENDPOINTS

## HEALTH CHECK
GET /health
# Check service health
curl -X GET http://localhost:8002/health

## STAFF ENDPOINTS
POST /api/v1/staff                             # Create a new staff member 
# Create a new staff member
curl -X POST http://localhost:8002/api/v1/staff \
  -H "Content-Type: application/json" \
  -d '{
    "firstName": "John",                  bistouri # string
    "lastName": "Smith",                  bistouri # string
    "email": "john.smith@example.com",    bistouri # string (valid email format, e.g., user@example.com)
    "phone": "+1-555-1234",               bistouri # string
    "address": "123 Main St, New York, NY", # string
    "position": "Manager",                bistouri # string
    "hireDate": "2020-01-15T00:00:00Z",   bistouri # string (ISO 8601 datetime)
    "salary": 65000.00,                   bistouri # number
    "status": "Active"                    bistouri # string (e.g., "Active", "Inactive")
  }'

GET /api/v1/staff                              # List all staff members
# List all staff members
curl -X GET http://localhost:8002/api/v1/staff

# List staff with position filter
curl -X GET "http://localhost:8002/api/v1/staff?position=Trainer"

# List staff with status filter
curl -X GET "http://localhost:8002/api/v1/staff?status=Active"

GET /api/v1/staff/{id}                         # Get a specific staff member
# Get a specific staff member
curl -X GET http://localhost:8002/api/v1/staff/1

PUT /api/v1/staff/{id}                         # Update a staff member 
# Update a staff member
# Request body should contain all fields to be updated.
# Below is an example updating all fields:
curl -X PUT http://localhost:8002/api/v1/staff/1 \
  -H "Content-Type: application/json" \
  -d '{
    "firstName": "Jane",                bistouri # string
    "lastName": "Doe",                  bistouri # string
    "email": "jane.doe@fitness.com",    bistouri # string
    "phone": "+1-555-5678",             bistouri # string
    "address": "789 Pine St, New York, NY", # string
    "position": "Lead Trainer",         bistouri # string
    "hireDate": "2022-03-10T00:00:00Z", # string (ISO 8601 datetime)
    "salary": 72000.00,                 bistouri # number
    "status": "Active"                  bistouri # string (e.g., "Active", "Inactive", "On Leave")
  }'

DELETE /api/v1/staff/{id}                      # Delete a staff member
# Delete a staff member
curl -X DELETE http://localhost:8002/api/v1/staff/1

GET /api/v1/staff/{staffID}/qualifications     # Get qualifications for a staff member
# Get qualifications for a staff member
curl -X GET http://localhost:8002/api/v1/staff/2/qualifications

## TRAINER ENDPOINTS
POST /api/v1/trainers                          # Create a new trainer
# Create a new trainer
# Note: First create a staff member, then use the returned staffId to create a trainer
# Step 1: Create staff member
curl -X POST http://localhost:8002/api/v1/staff \
  -H "Content-Type: application/json" \
  -d '{
    "firstName": "Helin",
    "lastName": "Aslanoglu", 
    "email": "helin@example.com",
    "phone": "+1-555-1234",
    "address": "IAU",
    "position": "Trainer",
    "hireDate": "2023-05-15T17:32:00Z",
    "salary": 6485.00,
    "status": "Active"
  }'
# Step 2: Create trainer with staffId from step 1 response
curl -X POST http://localhost:8002/api/v1/trainers \
  -H "Content-Type: application/json" \
  -d '{
    "staffId": 3,
    "specialization": "Senior Fitness",
    "certification": "ACE Senior Fitness Specialist",
    "experience": 2,
    "rating": 4.2
  }'

GET /api/v1/trainers                           # Get all trainers
# Get all trainers
curl -X GET http://localhost:8002/api/v1/trainers

# Get trainers with specialization filter
curl -X GET "http://localhost:8002/api/v1/trainers?specialization=Yoga"

GET /api/v1/trainers/{id}                      # Get a specific trainer
# Get a specific trainer
curl -X GET http://localhost:8002/api/v1/trainers/1

PUT /api/v1/trainers/{id}                      # Update a trainer
# Update a trainer
curl -X PUT http://localhost:8002/api/v1/trainers/1 \
  -H "Content-Type: application/json" \
  -d '{
    "specialization": "Weight Loss and Nutrition",
    "certification": "NASM Certified Personal Trainer, Precision Nutrition Level 1",
    "experience": 6,
    "rating": 4.8
  }'

DELETE /api/v1/trainers/{id}                   # Delete a trainer
# Delete a trainer
curl -X DELETE http://localhost:8002/api/v1/trainers/1

## QUALIFICATION ENDPOINTS
POST /api/v1/qualifications                    # Add a qualification
# Add a qualification
curl -X POST http://localhost:8002/api/v1/qualifications \
  -H "Content-Type: application/json" \
  -d '{
    "staffId": 3,
    "qualificationName": "Nutritional Advisor",
    "issueDate": "2022-05-20T00:00:00Z",
    "expiryDate": "2026-05-20T00:00:00Z",
    "issuingAuthority": "Nutrition Certification Board"
  }'

PUT /api/v1/qualifications/{id}                # Update a qualification
# Update a qualification
curl -X PUT http://localhost:8002/api/v1/qualifications/1 \
  -H "Content-Type: application/json" \
  -d '{
    "qualificationName": "Advanced Nutritional Advisor",
    "issueDate": "2022-05-20T00:00:00Z",
    "expiryDate": "2026-05-20T00:00:00Z",
    "issuingAuthority": "Nutrition Certification Board"
  }'

DELETE /api/v1/qualifications/{id}             # Delete a qualification
# Delete a qualification
curl -X DELETE http://localhost:8002/api/v1/qualifications/1

## PERSONAL TRAINING ENDPOINTS
POST /api/v1/training-sessions                 # Create a training session
# Create a training session
curl -X POST http://localhost:8002/api/v1/training-sessions \
  -H "Content-Type: application/json" \
  -d '{
    "memberId": 3,
    "trainerId": 2,
    "sessionDate": "2023-07-20",
    "startTime": "15:00:00",
    "endTime": "16:00:00",
    "notes": "Flexibility and balance focus",
    "status": "Scheduled",
    "price": 70.00
  }'

GET /api/v1/training-sessions                  # Get all training sessions
# Get all training sessions
curl -X GET http://localhost:8002/api/v1/training-sessions

# Get sessions with filters
curl -X GET "http://localhost:8002/api/v1/training-sessions?status=Scheduled&date=2023-07-20"

# Get sessions for a specific trainer
curl -X GET "http://localhost:8002/api/v1/training-sessions?trainer_id=2"

# Get sessions for a specific member
curl -X GET "http://localhost:8002/api/v1/training-sessions?member_id=3"

GET /api/v1/training-sessions/{id}             # Get a specific training session
# Get a specific training session
curl -X GET http://localhost:8002/api/v1/training-sessions/1

PUT /api/v1/training-sessions/{id}             # Update a training session
# Update a training session
curl -X PUT http://localhost:8002/api/v1/training-sessions/1 \
  -H "Content-Type: application/json" \
  -d '{
    "sessionDate": "2023-07-21",
    "startTime": "16:00:00",
    "endTime": "17:00:00",
    "notes": "Flexibility and balance focus, plus core work",
    "status": "Scheduled",
    "price": 70.00
  }'

PUT /api/v1/training-sessions/{id}/cancel      # Cancel a training session
# Cancel a training session
curl -X PUT http://localhost:8002/api/v1/training-sessions/1/cancel

PUT /api/v1/training-sessions/{id}/complete    # Complete a training session
# Complete a training session
curl -X PUT http://localhost:8002/api/v1/training-sessions/1/complete \
  -H "Content-Type: application/json" \
  -d '{
    "notes": "Session completed successfully. Client made good progress on flexibility."
  }'

DELETE /api/v1/training-sessions/{id}          # Delete a training session
# Delete a training session
curl -X DELETE http://localhost:8002/api/v1/training-sessions/1
